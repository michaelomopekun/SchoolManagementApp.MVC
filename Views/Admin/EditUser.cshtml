@model EditUserViewModel
@using SchoolManagementApp.MVC.Models

@{
    ViewData["Title"] = "Edit User";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="container mt-4">
    <h2>Edit User</h2>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <form asp-controller="Admin" asp-action="EditUser" method="post">
        <input type="hidden" asp-for="Id" />
        
        <div class="mb-3">
            <label asp-for="Username" class="form-label">Username</label>
            <input asp-for="Username" class="form-control" required />
            <span asp-validation-for="Username" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Role" class="form-label">Role</label>
            <select asp-for="Role" class="form-select" required>
                @foreach (UserRole role in Enum.GetValues(typeof(UserRole)))
                {
                    <option value="@role">@role</option>
                }
            </select>
            <span asp-validation-for="Role" class="text-danger"></span>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Save Changes</button>
            <a asp-controller="Admin" asp-action="ManageUsers" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}